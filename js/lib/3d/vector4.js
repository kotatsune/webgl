//================================================================================
//
//    Vector4.js
//
//================================================================================


'use strict';


var Vec4 = {};


//--------------------------------------------------------------------------------
// ベクトルを作成します。
//--------------------------------------------------------------------------------
Vec4.create = function ( vec )
{
	// ( x, y, z, w )
	
	var dest = new Float32Array( 4 );

	if ( vec )
	{
		dest[ 0 ] = vec[ 0 ];
		dest[ 1 ] = vec[ 1 ];
		dest[ 2 ] = vec[ 2 ];
		dest[ 3 ] = vec[ 3 ];
	}

	return dest;
};


//--------------------------------------------------------------------------------
// 零ベクトルを作成します。
//--------------------------------------------------------------------------------
Vec4.zero = function ( dest )
{
	if ( !dest )
	{
		dest = Vec4.create();
	}

	dest[ 0 ] = 0;
	dest[ 1 ] = 0;
	dest[ 2 ] = 0;
	dest[ 3 ] = 0;

	return dest;
};


//--------------------------------------------------------------------------------
// 要素を設定します。
//--------------------------------------------------------------------------------
Vec4.set = function ( vec, dest )
{
	if ( !dest )
	{
		dest = Vec4.create();
	}

	dest[ 0 ] = vec[ 0 ];
	dest[ 1 ] = vec[ 1 ];
	dest[ 2 ] = vec[ 2 ];
	dest[ 3 ] = vec[ 3 ];

	return dest;
};


//--------------------------------------------------------------------------------
// 符号を反転します。
//--------------------------------------------------------------------------------
Vec4.negate = function ( vec, dest )
{
	if ( !dest )
	{
		dest = Vec4.create();
	}

	dest[ 0 ] = -vec[ 0 ];
	dest[ 1 ] = -vec[ 1 ];
	dest[ 2 ] = -vec[ 2 ];
	dest[ 3 ] = -vec[ 3 ];

	return dest;
};


//--------------------------------------------------------------------------------
// 加算します。
//--------------------------------------------------------------------------------
Vec4.add = function ( vec1, vec2, dest )
{
	if ( !dest )
	{
		dest = Vec4.create();
	}

	dest[ 0 ] = vec1[ 0 ] + vec2[ 0 ];
	dest[ 1 ] = vec1[ 1 ] + vec2[ 1 ];
	dest[ 2 ] = vec1[ 2 ] + vec2[ 2 ];
	dest[ 3 ] = vec1[ 3 ] + vec2[ 3 ];

	return dest;
};


//--------------------------------------------------------------------------------
// 減算します。
//--------------------------------------------------------------------------------
Vec4.subtract = function ( vec1, vec2, dest )
{
	if ( !dest )
	{
		dest = Vec4.create();
	}

	dest[ 0 ] = vec1[ 0 ] - vec2[ 0 ];
	dest[ 1 ] = vec1[ 1 ] - vec2[ 1 ];
	dest[ 2 ] = vec1[ 2 ] - vec2[ 2 ];
	dest[ 3 ] = vec1[ 3 ] - vec2[ 3 ];

	return dest;
};


//--------------------------------------------------------------------------------
// スカラー倍します。
//--------------------------------------------------------------------------------
Vec4.multiplyScalar = function ( vec, a, dest )
{
	if ( !dest )
	{
		dest = Vec4.create();
	}

	dest[ 0 ] = vec[ 0 ] * a;
	dest[ 1 ] = vec[ 1 ] * a;
	dest[ 2 ] = vec[ 2 ] * a;
	dest[ 3 ] = vec[ 3 ] * a;

	return dest;

};


//--------------------------------------------------------------------------------
// 正規化します。
//--------------------------------------------------------------------------------
Vec4.normalize = function ( vec, dest )
{
	if ( !dest )
	{
		dest = Vec4.create();
	}

	var x = vec[ 0 ],
		y = vec[ 1 ],
		z = vec[ 2 ],
		w = vec[ 3 ];

	var length = Math.sqrt( x * x + y * y + z * z + w * w );
	if ( !length )
	{
		dest[ 0 ] = 0;
		dest[ 1 ] = 0;
		dest[ 2 ] = 0;
		dest[ 3 ] = 0;
	}
	else if ( length === 1 )
	{
		dest[ 0 ] = x;
		dest[ 1 ] = y;
		dest[ 2 ] = z;
		dest[ 3 ] = w;
	}
	else
	{
		var f = 1 / length;
		dest[ 0 ] = x * f;
		dest[ 1 ] = y * f;
		dest[ 2 ] = z * f;
		dest[ 3 ] = w * f;
	}

	return dest;
};


//--------------------------------------------------------------------------------
// 長さを算出します。
//--------------------------------------------------------------------------------
Vec4.length = function ( vec )
{
	var x = vec[ 0 ],
		y = vec[ 1 ],
		z = vec[ 2 ],
		w = vec[ 3 ];

	return Math.sqrt( x * x + y * y + z * z + w * w );
};


//--------------------------------------------------------------------------------
// 長さの二乗を算出します。
//--------------------------------------------------------------------------------
Vec4.squaredLength = function ( vec )
{
	var x = vec[ 0 ],
		y = vec[ 1 ],
		z = vec[ 2 ],
		w = vec[ 3 ];

	return x * x + y * y + z * z + w * w;
};


//--------------------------------------------------------------------------------
// 文字列を取得します。
//--------------------------------------------------------------------------------
Vec4.toString = function ( vec )
{
	return '( ' + vec[ 0 ] + ', ' + vec[ 1 ] + ', ' + vec[ 2 ] + ', ' + vec[ 3 ] + ' )';
};
